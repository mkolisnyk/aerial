#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.github.mkolisnyk.aerial.datagenerators.algorithms.NWiseDataTestingAlgorithm
	c342 [label=<<table title="com.github.mkolisnyk.aerial.datagenerators.algorithms.NWiseDataTestingAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NWiseDataTestingAlgorithm.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NWiseDataTestingAlgorithm </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NWiseDataTestingAlgorithm(initialTestData : Map&lt;String, List&lt;String&gt;&gt;, recordSizeValue : int) </td></tr>
<tr><td align="left" balign="left"> + getTestData() : Map&lt;String, List&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + distinctTestData() : Map&lt;String, List&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getColumnGroups(fieldNames : String[]) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getUniqueCombinations(fieldNames : String[]) : List&lt;FieldsRecord&gt; </td></tr>
<tr><td align="left" balign="left"> + getUniqueCombinations() : List&lt;FieldsRecord&gt; </td></tr>
<tr><td align="left" balign="left"> + generateTestData() : Map&lt;String, List&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./NWiseDataTestingAlgorithm.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.aerial.datagenerators.algorithms.FieldsTable
	c343 [label=<<table title="com.github.mkolisnyk.aerial.datagenerators.algorithms.FieldsTable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FieldsTable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FieldsTable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FieldsTable() </td></tr>
<tr><td align="left" balign="left"> + getData() : Map&lt;FieldsRecord, Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + add(input : List&lt;FieldsRecord&gt;) </td></tr>
<tr><td align="left" balign="left"> + increment(record : FieldsRecord) </td></tr>
<tr><td align="left" balign="left"> + areAllNonZeros() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSorted() : TreeMap&lt;FieldsRecord, Integer&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./FieldsTable.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.aerial.datagenerators.algorithms.FieldsTable.ValueComparator
	c344 [label=<<table title="com.github.mkolisnyk.aerial.datagenerators.algorithms.FieldsTable.ValueComparator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FieldsTable.ValueComparator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ValueComparator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FieldsTable.ValueComparator(base : Map&lt;FieldsRecord, Integer&gt;) </td></tr>
<tr><td align="left" balign="left"> + compare(a : FieldsRecord, b : FieldsRecord) : int </td></tr>
		</table></td></tr>
		</table>>, URL="./FieldsTable.ValueComparator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.aerial.datagenerators.algorithms.FieldsRecord
	c345 [label=<<table title="com.github.mkolisnyk.aerial.datagenerators.algorithms.FieldsRecord" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FieldsRecord.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FieldsRecord </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FieldsRecord(dataValue : Map&lt;String, String&gt;) </td></tr>
<tr><td align="left" balign="left"> + getData() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + matches(other : FieldsRecord) : boolean </td></tr>
<tr><td align="left" balign="left"> + rightDiff(other : FieldsRecord) : int </td></tr>
<tr><td align="left" balign="left"> + rightValueDiff(other : FieldsRecord) : int </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : Object) : int </td></tr>
		</table></td></tr>
		</table>>, URL="./FieldsRecord.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

