#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.github.mkolisnyk.aerial.document.SimpleSectionTest
	c206 [label=<<table title="com.github.mkolisnyk.aerial.document.SimpleSectionTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimpleSectionTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SimpleSectionTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SimpleSectionTest(classValue : Class&lt;?&gt;, description : String, expectedValue : String) </td></tr>
<tr><td align="left" balign="left"> + data() : Collection&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + testParseValidFormat() </td></tr>
<tr><td align="left" balign="left"> + testParseNullStringShouldThrowError() </td></tr>
<tr><td align="left" balign="left"> + testParseEmptyStringShouldThrowError() </td></tr>
<tr><td align="left" balign="left"> + testValidateValidFormat() </td></tr>
<tr><td align="left" balign="left"> + testValidateShouldReturnExceptionOnEmptyInput() </td></tr>
<tr><td align="left" balign="left"> + testValidateShouldReturnExceptionOnNullInput() </td></tr>
<tr><td align="left" balign="left"> + testGenerateShouldReturnFormattedString() </td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleSectionTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.aerial.document.InputSectionTest
	c207 [label=<<table title="com.github.mkolisnyk.aerial.document.InputSectionTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./InputSectionTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> InputSectionTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + InputSectionTest(description : String, inputTextValue : String, shouldPassValue : boolean, recordsCountValue : int) </td></tr>
<tr><td align="left" balign="left"> + data() : Collection&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + testParseString() </td></tr>
		</table></td></tr>
		</table>>, URL="./InputSectionTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.aerial.document.InputRecordTest
	c208 [label=<<table title="com.github.mkolisnyk.aerial.document.InputRecordTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./InputRecordTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> InputRecordTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + InputRecordTest(description : String, readLineParam : String, readHeaderLineParam : String, shouldFailParam : boolean, nameParam : String, typeParam : String, valueParam : String, conditionParam : String, uniqueParam : boolean, mandatoryParam : boolean) </td></tr>
<tr><td align="left" balign="left"> + data() : Collection&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + testRead() </td></tr>
		</table></td></tr>
		</table>>, URL="./InputRecordTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.aerial.document.GenerateTest
	c209 [label=<<table title="com.github.mkolisnyk.aerial.document.GenerateTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GenerateTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GenerateTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GenerateTest() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + testInputSectionGenerateShouldReturnFormattedText() </td></tr>
		</table></td></tr>
		</table>>, URL="./GenerateTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.aerial.document.FeatureSectionTest
	c210 [label=<<table title="com.github.mkolisnyk.aerial.document.FeatureSectionTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FeatureSectionTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FeatureSectionTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FeatureSectionTest() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + testValidateAllContentShouldSucceed() </td></tr>
<tr><td align="left" balign="left"> + testValidateShouldFailOnEmptyCaseName() </td></tr>
<tr><td align="left" balign="left"> + testValidateScenariosSectionIsOptional() </td></tr>
<tr><td align="left" balign="left"> + testValidateScenariosSectionShouldFailIfSetWrong() </td></tr>
<tr><td align="left" balign="left"> + testValidateShouldFailIfMandatorySectionsAreMissing() </td></tr>
<tr><td align="left" balign="left"> + testParseForTextWithNoTokensShouldReturnJustDescription() </td></tr>
<tr><td align="left" balign="left"> + testParseValidScenarioShouldFillAllSections() </td></tr>
<tr><td align="left" balign="left"> + testGenerateShouldReturnValidFormattedText() </td></tr>
		</table></td></tr>
		</table>>, URL="./FeatureSectionTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.aerial.document.DocumentTest
	c211 [label=<<table title="com.github.mkolisnyk.aerial.document.DocumentTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DocumentTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DocumentTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DocumentTest() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + testValidateAllContentShouldSucceed() </td></tr>
<tr><td align="left" balign="left"> + testValidateShouldFailIfMandatorySectionsAreMissing() </td></tr>
<tr><td align="left" balign="left"> + testParseForTextWithNoTokensShouldReturnJustDescription() </td></tr>
<tr><td align="left" balign="left"> + testParseValidScenarioShouldFillAllSections() </td></tr>
<tr><td align="left" balign="left"> + testGenerateShouldReturnValidFormattedText() </td></tr>
<tr><td align="left" balign="left"> + testGenerateWithExternalInputsShouldResolveReferences() </td></tr>
		</table></td></tr>
		</table>>, URL="./DocumentTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.aerial.document.CaseSectionTest
	c212 [label=<<table title="com.github.mkolisnyk.aerial.document.CaseSectionTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CaseSectionTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CaseSectionTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CaseSectionTest() </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + testValidateAllContentShouldSucceed() </td></tr>
<tr><td align="left" balign="left"> + testValidatePrerequisitesSectionIsOptional() </td></tr>
<tr><td align="left" balign="left"> + testValidatePrerequisitesSectionShouldFailIfSetWrong() </td></tr>
<tr><td align="left" balign="left"> + testValidateShouldFailIfMandatorySectionsAreMissing() </td></tr>
<tr><td align="left" balign="left"> + testParseForTextWithNoTokensShouldReturnJustDescription() </td></tr>
<tr><td align="left" balign="left"> + testParseValidScenarioShouldFillAllSections() </td></tr>
<tr><td align="left" balign="left"> + testGenerateShouldReturnValidFormattedText() </td></tr>
<tr><td align="left" balign="left"> + testGenerateWithUniqueFieldsShouldReturnUniqueValueScenario() </td></tr>
<tr><td align="left" balign="left"> + testGenerateWithMandatoryFieldsShouldReturnMandatoryValueScenario() </td></tr>
<tr><td align="left" balign="left"> + testGenerateWithCustomGeneratorShouldReturnCustomScenario() </td></tr>
		</table></td></tr>
		</table>>, URL="./CaseSectionTest.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

